# Base image
FROM ubuntu:latest as base

# Base external dependencies.
RUN apt-get -y update                                                                         \
&& apt-get install --no-install-recommends -y curl libc6-dev libgcc-7-dev git                 \
  libstdc++-7-dev make binutils-multiarch ca-certificates xz-utils cmake vim                  \
  && apt-get -y autoremove

# Speak the words of power to bootstrap our toolchain
ENV CPATH="/usr/include/x86_64-linux-gnu:${CPATH}"
ENV LIBRARY_PATH="/usr/lib/x86_64-linux-gnu:${LIBRARY_PATH}"

# Copy our dependencies in and unpack
COPY deps/gsl.tar.gz /root/gsl.tar.gz
RUN cd /root                                                                                  \
  && tar xzf gsl.tar.gz                                                                       \
  && cp -r gsl/include/gsl /usr/local/include                                                 \
  && rm -rf gsl
COPY deps/dotfiles/. /root/dotfiles
RUN cd /root/dotfiles && ./install

# Final configurations
RUN mkdir -p <%= @base_path %>
WORKDIR <%= @base_path %>

# Generate targets for each compiler/version pair
<% @compilers.each_pair do |name, versions| %>
  <% versions.each do |vid| %>
    <% # I'm hilarious %>
    <% current = "#{name} - #{vid}" %>

    # Generate a compiler image for <%= current %>
    FROM base as <%= compiler_image_for(name, vid) %>
  
    # Pull down and unpack our compiler image
    RUN curl -sL <%= url_for(name, vid) %> | tar Jxf -
    ENV CC <%= c_compiler_for(name, vid) %>
    ENV CXX <%= cpp_compiler_for(name, vid) %>

    # Copy libdart in
    COPY deps/libdart/. /root/libdart

    # Generate a builder image for <%= current %>
    FROM <%= compiler_image_for(name, vid) %> as <%= builder_image_for(name, vid) %>

    # Attempt to compile Dart with <%= current %>
    RUN mkdir /root/libdart/build                                                             \
      && cd /root/libdart/build                                                               \
      && cmake ..                                                                             \
      && make -j $(nproc)

    # Generate a tester image for <%= current %>
    FROM ubuntu:latest as <%= tester_image_for(name, vid) %>

    # Copy the build folder over and run the tests.
    COPY --from=<%= builder_image_for(name, vid) %> /root/libdart/build/. /root/build
    CMD /root/build/test/unit_tests
  <% end %>
<% end %>
