#!/usr/bin/env ruby

#----- System Requires -----#

require 'erb'
require 'uri'
require 'yaml'
require 'byebug'

#----- Helpers -----#

def url_for(name, version)
  base = @base_url
  base = base[0...-1] while base[-1] == '/'
  "#{base}/#{name}-#{version}.tar.xz"
end

def path_for(name, version)
  File.join(@base_path, "#{name}-#{version}")
end

def binary_for(name, cxx)
  case name.downcase
  when 'gcc' then cxx ? 'g++' : 'gcc'
  when 'clang' then cxx ? 'clang++' : 'clang'
  else raise "Encountered unknown compiler \"#{name}\""
  end
end

def c_compiler_for(name, version)
  File.join(path_for(name, version), 'bin', binary_for(name, false))
end

def cpp_compiler_for(name, version)
  File.join(path_for(name, version), 'bin', binary_for(name, true))
end

def builder_image_for(name, version)
  "#{name}_#{version.gsub('.', '_')}"
end

def tester_image_for(name, version)
  "#{name}_#{version.gsub('.', '_')}_tests"
end

#----- Setup/Validate -----#

raise 'Config file must be specified' if ARGV.empty?
conf = YAML::load_file(ARGV[0])

raise 'Config file must specify compiler versions' if conf['compilers'].nil?
@compilers = conf['compilers']

raise 'Config file must specify compiler base url' if conf['base_url'].nil?
@base_url = conf['base_url']

raise 'Config file must specify compiler base path' if conf['base_path'].nil?
@base_path = conf['base_path']

#----- Application Logic -----#

File.open('Dockerfile', 'w+') { |out| out << ERB.new(File.read('templates/Dockerfile.erb')).result(binding) }
